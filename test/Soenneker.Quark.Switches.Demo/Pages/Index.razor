@page "/"
@using Soenneker.Quark.Dtos.Colors
@using Soenneker.Quark.Switches
@using Soenneker.Quark.Enums.Size
@using Soenneker.Quark.Validations

<Div class="container mt-4">
    <Div class="row">
        <Div class="col-12">
            <Label class="mb-4" style="font-size: 2rem; font-weight: bold;">Soenneker.Quark.Switches Demo</Label>
            <p class="lead">This page demonstrates the Switch component with various configurations and features.</p>
        </Div>
    </Div>

    <!-- Basic Switches -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Basic Switches</Label>
            <Div class="card">
                <Div class="card-body">
                    <Div class="row">
                        <Div class="col-md-6">
                            <h5>Simple Switch</h5>
                            <Switch Label="Enable notifications" @bind-Checked="basicChecked" />
                            <p class="text-muted mt-2">Status: @(basicChecked ? "Enabled" : "Disabled")</p>
                        </Div>
                        <Div class="col-md-6">
                            <h5>Switch without Label</h5>
                            <Switch @bind-Checked="noLabelChecked" />
                            <p class="text-muted mt-2">Status: @(noLabelChecked ? "On" : "Off")</p>
                        </Div>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Color Variants -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Color Variants</Label>
            <Div class="card">
                <Div class="card-body">
                    <Div class="row">
                        <Div class="col-md-4">
                            <h6>Primary</h6>
                            <Switch Label="Primary Switch" Color="Color.Primary" @bind-Checked="primaryChecked" />
                        </Div>
                        <Div class="col-md-4">
                            <h6>Secondary</h6>
                            <Switch Label="Secondary Switch" Color="Color.Secondary" @bind-Checked="secondaryChecked" />
                        </Div>
                        <Div class="col-md-4">
                            <h6>Success</h6>
                            <Switch Label="Success Switch" Color="Color.Success" @bind-Checked="successChecked" />
                        </Div>
                    </Div>
                    <Div class="row mt-3">
                        <Div class="col-md-4">
                            <h6>Danger</h6>
                            <Switch Label="Danger Switch" Color="Color.Danger" @bind-Checked="dangerChecked" />
                        </Div>
                        <Div class="col-md-4">
                            <h6>Warning</h6>
                            <Switch Label="Warning Switch" Color="Color.Warning" @bind-Checked="warningChecked" />
                        </Div>
                        <Div class="col-md-4">
                            <h6>Info</h6>
                            <Switch Label="Info Switch" Color="Color.Info" @bind-Checked="infoChecked" />
                        </Div>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Size Variants -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Size Variants</Label>
            <Div class="card">
                <Div class="card-body">
                    <Div class="row">
                        <Div class="col-md-4">
                            <h6>Small</h6>
                            <Switch Label="Small Switch" Size="Size.Small" @bind-Checked="smallChecked" />
                        </Div>
                        <Div class="col-md-4">
                            <h6>Default</h6>
                            <Switch Label="Default Switch" Size="Size.Default" @bind-Checked="defaultChecked" />
                        </Div>
                        <Div class="col-md-4">
                            <h6>Large</h6>
                            <Switch Label="Large Switch" Size="Size.Large" @bind-Checked="largeChecked" />
                        </Div>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Disabled State -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Disabled State</Label>
            <Div class="card">
                <Div class="card-body">
                    <Div class="row">
                        <Div class="col-md-6">
                            <h6>Disabled (Unchecked)</h6>
                            <Switch Label="This switch is disabled" Disabled="true" Checked="false" />
                        </Div>
                        <Div class="col-md-6">
                            <h6>Disabled (Checked)</h6>
                            <Switch Label="This switch is disabled and checked" Disabled="true" Checked="true" />
                        </Div>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Event Handling -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Event Handling</Label>
            <Div class="card">
                <Div class="card-body">
                    <Div class="row">
                        <Div class="col-md-6">
                            <h6>Click Events</h6>
                            <Switch Label="Click me to see events" @bind-Checked="eventChecked" OnClick="OnSwitchClick" />
                            <p class="text-muted mt-2">Click count: @clickCount</p>
                        </Div>
                        <Div class="col-md-6">
                            <h6>Change Events</h6>
                            <Switch Label="Change me to see events" @bind-Checked="changeChecked" OnChange="OnSwitchChange" />
                            <p class="text-muted mt-2">Last change: @lastChangeEvent</p>
                        </Div>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Form Integration -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Form Integration</Label>
            <Div class="card">
                <Div class="card-body">
                    <form>
                        <Div class="mb-3">
                            <h6>User Preferences</h6>
                            <Div class="form-check form-switch">
                                <Switch Label="Email notifications" @bind-Checked="formData.EmailNotifications" />
                            </Div>
                            <Div class="form-check form-switch">
                                <Switch Label="SMS notifications" @bind-Checked="formData.SmsNotifications" />
                            </Div>
                            <Div class="form-check form-switch">
                                <Switch Label="Marketing emails" @bind-Checked="formData.MarketingEmails" />
                            </Div>
                        </Div>
                        <button type="button" class="btn btn-primary" @onclick="SubmitForm">Submit Preferences</button>
                    </form>
                    <Div class="mt-3">
                        <h6>Form Data:</h6>
                        <pre class="bg-light p-2 rounded">@GetFormDataJson()</pre>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Validation (Data Annotations) -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Validation</Label>
            <Div class="card">
                <Div class="card-body">
                    <Validations @ref="_validations" Model="_validationModel" ValidateOnLoad="true">
                        <Validation @ref="_acceptValidation">
                            <Switch Label="I accept the Terms and Conditions"
                                    @bind-Checked="_validationModel.AcceptTerms"
                                    />

                            <ValidationError Class="mt-2" />
                        </Validation>

                        <button type="button" class="btn btn-primary mt-3" @onclick="ValidateValidationModel">Validate</button>
                    </Validations>
                </Div>
            </Div>
        </Div>
    </Div>

    <!-- Interactive Demo -->
    <Div class="row mb-4">
        <Div class="col-12">
            <Label style="font-size: 1.5rem; font-weight: bold;">Interactive Demo</Label>
            <Div class="card">
                <Div class="card-body">
                    <Div class="row">
                        <Div class="col-md-6">
                            <h6>Master Switch</h6>
                            <Switch Label="Toggle all switches" @bind-Checked="masterSwitch" />
                        </Div>
                        <Div class="col-md-6">
                            <h6>Controlled Switches</h6>
                            <Switch Label="Option 1" Checked="masterSwitch" Disabled="true" />
                            <Switch Label="Option 2" Checked="masterSwitch" Disabled="true" />
                            <Switch Label="Option 3" Checked="masterSwitch" Disabled="true" />
                        </Div>
                    </Div>
                </Div>
            </Div>
        </Div>
    </Div>
</Div>

@code {
    // Basic switches
    private bool basicChecked = false;
    private bool noLabelChecked = true;

    // Color variants
    private bool primaryChecked = false;
    private bool secondaryChecked = true;
    private bool successChecked = false;
    private bool dangerChecked = true;
    private bool warningChecked = false;
    private bool infoChecked = true;

    // Size variants
    private bool smallChecked = false;
    private bool defaultChecked = true;
    private bool largeChecked = false;

    // Event handling
    private bool eventChecked = false;
    private bool changeChecked = false;
    private int clickCount = 0;
    private string lastChangeEvent = "No changes yet";

    // Form data
    private UserPreferences formData = new();

    // Interactive demo
    private bool masterSwitch = false;

    private void OnSwitchClick(MouseEventArgs e)
    {
        clickCount++;
        StateHasChanged();
    }

    private void OnSwitchChange(ChangeEventArgs e)
    {
        lastChangeEvent = $"Changed to: {e.Value} at {DateTime.Now:HH:mm:ss}";
        StateHasChanged();
    }

    private void SubmitForm()
    {
        // In a real application, you would submit the form data to a server
        Console.WriteLine("Form submitted with data: " + GetFormDataJson());
    }

    private string GetFormDataJson()
    {
        return System.Text.Json.JsonSerializer.Serialize(formData, new System.Text.Json.JsonSerializerOptions { WriteIndented = true });
    }

    public class UserPreferences
    {
        public bool EmailNotifications { get; set; } = true;
        public bool SmsNotifications { get; set; } = false;
        public bool MarketingEmails { get; set; } = false;
    }

    // Validation demo
    private Validations? _validations;
    private Validation? _acceptValidation;
    private readonly ValidationFormModel _validationModel = new();

    public sealed class ValidationFormModel
    {
        [System.ComponentModel.DataAnnotations.Range(typeof(bool), "true", "true", ErrorMessage = "You must accept the terms.")]
        public bool AcceptTerms { get; set; }
    }

    private async Task ValidateValidationModel()
    {
        if (_validations is not null)
            await _validations.Validate();
    }
}
